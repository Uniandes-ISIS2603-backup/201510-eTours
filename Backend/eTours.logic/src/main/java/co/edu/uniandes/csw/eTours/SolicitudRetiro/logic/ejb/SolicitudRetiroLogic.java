/* ========================================================================
 * Copyright 2014 SportGroup
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 SportGroup
  
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
  
 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.
  
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 * ========================================================================
  
  
 Source generated by CrudMaker version 1.0.0.201411201032*/
package co.edu.uniandes.csw.eTours.SolicitudRetiro.logic.ejb;


import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.enterprise.inject.Default;


import co.edu.uniandes.csw.eTours.SolicitudRetiro.logic.api.ISolicitudRetiroLogic;
import co.edu.uniandes.csw.eTours.SolicitudRetiro.logic.converter.SolicitudRetiroConverter;
import co.edu.uniandes.csw.eTours.SolicitudRetiro.logic.dto.SolicitudRetiroDTO;
import co.edu.uniandes.csw.eTours.SolicitudRetiro.logic.dto.SolicitudRetiroPageDTO;
import co.edu.uniandes.csw.eTours.SolicitudRetiro.logic.entity.SolicitudRetiroEntity;
import java.util.List;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

@Default
@Stateless
@LocalBean
public class SolicitudRetiroLogic implements ISolicitudRetiroLogic
{

    @PersistenceContext(unitName = "eToursClassPU")
    protected EntityManager entityManager;

    public SolicitudRetiroDTO createSolicitudRetiro(SolicitudRetiroDTO solicitudRetiro) 
    {
        SolicitudRetiroEntity entity = SolicitudRetiroConverter.persistenceDTO2Entity(solicitudRetiro);
        entityManager.persist(entity);
        return SolicitudRetiroConverter.entity2PersistenceDTO(entity);
    }

    public List<SolicitudRetiroDTO> getSolicitudesRetiro()
    {
        Query q = entityManager.createQuery("select u from SolicitudRetiroEntity u");
        return SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList());
    }

    public SolicitudRetiroPageDTO getSolicitudesRetiro(Integer page, Integer maxRecords) 
    {
        Query count = entityManager.createQuery("select count(u) from SolicitudRetiroEntity u");
        Long regCount = 0L;
        regCount = Long.parseLong(count.getSingleResult().toString());
        Query q = entityManager.createQuery("select u from  SolicitudRetiroEntity u");
        if (page != null && maxRecords != null) 
        {
            q.setFirstResult((page - 1) * maxRecords);
            q.setMaxResults(maxRecords);
        }
        SolicitudRetiroPageDTO response = new SolicitudRetiroPageDTO();
        response.setTotalRecords(regCount);
        response.setRecords(SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList()));
        return response;
    }

    public SolicitudRetiroDTO getSolicitudRetiro(Long id) 
    {
        return SolicitudRetiroConverter.entity2PersistenceDTO(entityManager.find(SolicitudRetiroEntity.class, id));
    }

    public void deleteSolicitudRetiro(Long id) 
    {
        SolicitudRetiroEntity entity = entityManager.find(SolicitudRetiroEntity.class, id);
        entityManager.remove(entity);
    }

    public void updateSolicitudRetiro(SolicitudRetiroDTO pSolicitud) 
    {
        SolicitudRetiroEntity entity = entityManager.merge(SolicitudRetiroConverter.persistenceDTO2Entity(pSolicitud));
        SolicitudRetiroConverter.entity2PersistenceDTO(entity);
    }

    


    public SolicitudRetiroDTO updateSolicitudRetiro(Long id, int pNuevoEstado) 
    {
        SolicitudRetiroEntity entity = entityManager.find(SolicitudRetiroEntity.class, id);       
        //Elimina el proveedor de la lista de proveedores
        ProveedorEntity entityProveedor = entityManager.find(ProveedorEntity.class, entity.getIdProveedor());
        entityManager.remove(entityProveedor);
        //Modifica la solicitud
        entity.setEstado(pNuevoEstado);
        SolicitudRetiroConverter.entity2PersistenceDTO(entity);
        return SolicitudRetiroConverter.entity2PersistenceDTO(entity);
    }

 

    public List<SolicitudRetiroDTO> getSolicitudesRetiroEstado(int pEstado) 
    {
        Query q = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.estado="+pEstado+"");
        return SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList());
    }

    public SolicitudRetiroPageDTO getSolicitudesRetiroEstado(int pEstado, Integer page, Integer maxRecords) 
    {
        Query count = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.estado="+pEstado+"");
        Long regCount = 0L;
        regCount = Long.parseLong(count.getSingleResult().toString());
        Query q = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.estado="+pEstado+"");
        if (page != null && maxRecords != null) 
        {
            q.setFirstResult((page - 1) * maxRecords);
            q.setMaxResults(maxRecords);
        }
        SolicitudRetiroPageDTO response = new SolicitudRetiroPageDTO();
        response.setTotalRecords(regCount);
        response.setRecords(SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList()));
        return response;
    }

    public List<SolicitudRetiroDTO> getSolicitudesRetiroFecha(String pFecha) 
    {
        Query q = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.fecha"+pFecha+"");
        return SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList());
    }

    public SolicitudRetiroPageDTO getSolicitudesRetiroFecha(String pFecha, Integer page, Integer maxRecords) {
        Query count = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.fecha"+pFecha+"");
        Long regCount = 0L;
        regCount = Long.parseLong(count.getSingleResult().toString());
        Query q = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.fecha"+pFecha+"");
        if (page != null && maxRecords != null) 
        {
            q.setFirstResult((page - 1) * maxRecords);
            q.setMaxResults(maxRecords);
        }
        SolicitudRetiroPageDTO response = new SolicitudRetiroPageDTO();
        response.setTotalRecords(regCount);
        response.setRecords(SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList()));
        return response;
    }

    public List<SolicitudRetiroDTO> getSolicitudesRetiroProveedor(Long id_Proveedor) 
    {
        Query q = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.idProveedor"+id_Proveedor+"");
        return SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList());
    }

    public SolicitudRetiroPageDTO getSolicitudesRetiroProveedor(Long id_Proveedor, Integer page, Integer maxRecords) 
    {
        Query count = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.idProveedor"+id_Proveedor+"");
        Long regCount = 0L;
        regCount = Long.parseLong(count.getSingleResult().toString());
        Query q = entityManager.createQuery("select u from SolicitudRetiroEntity u where u.idProveedor"+id_Proveedor+"");
        if (page != null && maxRecords != null) 
        {
            q.setFirstResult((page - 1) * maxRecords);
            q.setMaxResults(maxRecords);
        }
        SolicitudRetiroPageDTO response = new SolicitudRetiroPageDTO();
        response.setTotalRecords(regCount);
        response.setRecords(SolicitudRetiroConverter.entity2PersistenceDTOList(q.getResultList()));
        return response;
    }

    

    public List<SolicitudRetiroDTO> getSsolicitudesRetiro() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
   
}
